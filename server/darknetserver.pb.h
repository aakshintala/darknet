// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: darknetserver.proto

#ifndef PROTOBUF_darknetserver_2eproto__INCLUDED
#define PROTOBUF_darknetserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_darknetserver_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsKeyFrameImpl();
void InitDefaultsKeyFrame();
void InitDefaultsDetectedObjects_DetectedObject_boxImpl();
void InitDefaultsDetectedObjects_DetectedObject_box();
void InitDefaultsDetectedObjects_DetectedObjectImpl();
void InitDefaultsDetectedObjects_DetectedObject();
void InitDefaultsDetectedObjectsImpl();
void InitDefaultsDetectedObjects();
inline void InitDefaults() {
  InitDefaultsKeyFrame();
  InitDefaultsDetectedObjects_DetectedObject_box();
  InitDefaultsDetectedObjects_DetectedObject();
  InitDefaultsDetectedObjects();
}
}  // namespace protobuf_darknetserver_2eproto
namespace darknetServer {
class DetectedObjects;
class DetectedObjectsDefaultTypeInternal;
extern DetectedObjectsDefaultTypeInternal _DetectedObjects_default_instance_;
class DetectedObjects_DetectedObject;
class DetectedObjects_DetectedObjectDefaultTypeInternal;
extern DetectedObjects_DetectedObjectDefaultTypeInternal _DetectedObjects_DetectedObject_default_instance_;
class DetectedObjects_DetectedObject_box;
class DetectedObjects_DetectedObject_boxDefaultTypeInternal;
extern DetectedObjects_DetectedObject_boxDefaultTypeInternal _DetectedObjects_DetectedObject_box_default_instance_;
class KeyFrame;
class KeyFrameDefaultTypeInternal;
extern KeyFrameDefaultTypeInternal _KeyFrame_default_instance_;
}  // namespace darknetServer
namespace darknetServer {

// ===================================================================

class KeyFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:darknetServer.KeyFrame) */ {
 public:
  KeyFrame();
  virtual ~KeyFrame();

  KeyFrame(const KeyFrame& from);

  inline KeyFrame& operator=(const KeyFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyFrame(KeyFrame&& from) noexcept
    : KeyFrame() {
    *this = ::std::move(from);
  }

  inline KeyFrame& operator=(KeyFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyFrame* internal_default_instance() {
    return reinterpret_cast<const KeyFrame*>(
               &_KeyFrame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(KeyFrame* other);
  friend void swap(KeyFrame& a, KeyFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyFrame* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyFrame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyFrame& from);
  void MergeFrom(const KeyFrame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float data = 5;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 5;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_data();

  // int32 width = 1;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 height = 2;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // int32 numChannels = 3;
  void clear_numchannels();
  static const int kNumChannelsFieldNumber = 3;
  ::google::protobuf::int32 numchannels() const;
  void set_numchannels(::google::protobuf::int32 value);

  // int32 widthStep = 4;
  void clear_widthstep();
  static const int kWidthStepFieldNumber = 4;
  ::google::protobuf::int32 widthstep() const;
  void set_widthstep(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:darknetServer.KeyFrame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 numchannels_;
  ::google::protobuf::int32 widthstep_;
  mutable int _cached_size_;
  friend struct ::protobuf_darknetserver_2eproto::TableStruct;
  friend void ::protobuf_darknetserver_2eproto::InitDefaultsKeyFrameImpl();
};
// -------------------------------------------------------------------

class DetectedObjects_DetectedObject_box : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:darknetServer.DetectedObjects.DetectedObject.box) */ {
 public:
  DetectedObjects_DetectedObject_box();
  virtual ~DetectedObjects_DetectedObject_box();

  DetectedObjects_DetectedObject_box(const DetectedObjects_DetectedObject_box& from);

  inline DetectedObjects_DetectedObject_box& operator=(const DetectedObjects_DetectedObject_box& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedObjects_DetectedObject_box(DetectedObjects_DetectedObject_box&& from) noexcept
    : DetectedObjects_DetectedObject_box() {
    *this = ::std::move(from);
  }

  inline DetectedObjects_DetectedObject_box& operator=(DetectedObjects_DetectedObject_box&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedObjects_DetectedObject_box& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedObjects_DetectedObject_box* internal_default_instance() {
    return reinterpret_cast<const DetectedObjects_DetectedObject_box*>(
               &_DetectedObjects_DetectedObject_box_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DetectedObjects_DetectedObject_box* other);
  friend void swap(DetectedObjects_DetectedObject_box& a, DetectedObjects_DetectedObject_box& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedObjects_DetectedObject_box* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedObjects_DetectedObject_box* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedObjects_DetectedObject_box& from);
  void MergeFrom(const DetectedObjects_DetectedObject_box& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedObjects_DetectedObject_box* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float w = 3;
  void clear_w();
  static const int kWFieldNumber = 3;
  float w() const;
  void set_w(float value);

  // float h = 4;
  void clear_h();
  static const int kHFieldNumber = 4;
  float h() const;
  void set_h(float value);

  // @@protoc_insertion_point(class_scope:darknetServer.DetectedObjects.DetectedObject.box)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float w_;
  float h_;
  mutable int _cached_size_;
  friend struct ::protobuf_darknetserver_2eproto::TableStruct;
  friend void ::protobuf_darknetserver_2eproto::InitDefaultsDetectedObjects_DetectedObject_boxImpl();
};
// -------------------------------------------------------------------

class DetectedObjects_DetectedObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:darknetServer.DetectedObjects.DetectedObject) */ {
 public:
  DetectedObjects_DetectedObject();
  virtual ~DetectedObjects_DetectedObject();

  DetectedObjects_DetectedObject(const DetectedObjects_DetectedObject& from);

  inline DetectedObjects_DetectedObject& operator=(const DetectedObjects_DetectedObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedObjects_DetectedObject(DetectedObjects_DetectedObject&& from) noexcept
    : DetectedObjects_DetectedObject() {
    *this = ::std::move(from);
  }

  inline DetectedObjects_DetectedObject& operator=(DetectedObjects_DetectedObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedObjects_DetectedObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedObjects_DetectedObject* internal_default_instance() {
    return reinterpret_cast<const DetectedObjects_DetectedObject*>(
               &_DetectedObjects_DetectedObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DetectedObjects_DetectedObject* other);
  friend void swap(DetectedObjects_DetectedObject& a, DetectedObjects_DetectedObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedObjects_DetectedObject* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedObjects_DetectedObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedObjects_DetectedObject& from);
  void MergeFrom(const DetectedObjects_DetectedObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedObjects_DetectedObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DetectedObjects_DetectedObject_box box;

  // accessors -------------------------------------------------------

  // repeated float prob = 3;
  int prob_size() const;
  void clear_prob();
  static const int kProbFieldNumber = 3;
  float prob(int index) const;
  void set_prob(int index, float value);
  void add_prob(float value);
  const ::google::protobuf::RepeatedField< float >&
      prob() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_prob();

  // repeated float mask = 4;
  int mask_size() const;
  void clear_mask();
  static const int kMaskFieldNumber = 4;
  float mask(int index) const;
  void set_mask(int index, float value);
  void add_mask(float value);
  const ::google::protobuf::RepeatedField< float >&
      mask() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_mask();

  // .darknetServer.DetectedObjects.DetectedObject.box bbox = 1;
  bool has_bbox() const;
  void clear_bbox();
  static const int kBboxFieldNumber = 1;
  const ::darknetServer::DetectedObjects_DetectedObject_box& bbox() const;
  ::darknetServer::DetectedObjects_DetectedObject_box* release_bbox();
  ::darknetServer::DetectedObjects_DetectedObject_box* mutable_bbox();
  void set_allocated_bbox(::darknetServer::DetectedObjects_DetectedObject_box* bbox);

  // int32 classes = 2;
  void clear_classes();
  static const int kClassesFieldNumber = 2;
  ::google::protobuf::int32 classes() const;
  void set_classes(::google::protobuf::int32 value);

  // float objectness = 5;
  void clear_objectness();
  static const int kObjectnessFieldNumber = 5;
  float objectness() const;
  void set_objectness(float value);

  // int32 sort_class = 6;
  void clear_sort_class();
  static const int kSortClassFieldNumber = 6;
  ::google::protobuf::int32 sort_class() const;
  void set_sort_class(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:darknetServer.DetectedObjects.DetectedObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > prob_;
  mutable int _prob_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > mask_;
  mutable int _mask_cached_byte_size_;
  ::darknetServer::DetectedObjects_DetectedObject_box* bbox_;
  ::google::protobuf::int32 classes_;
  float objectness_;
  ::google::protobuf::int32 sort_class_;
  mutable int _cached_size_;
  friend struct ::protobuf_darknetserver_2eproto::TableStruct;
  friend void ::protobuf_darknetserver_2eproto::InitDefaultsDetectedObjects_DetectedObjectImpl();
};
// -------------------------------------------------------------------

class DetectedObjects : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:darknetServer.DetectedObjects) */ {
 public:
  DetectedObjects();
  virtual ~DetectedObjects();

  DetectedObjects(const DetectedObjects& from);

  inline DetectedObjects& operator=(const DetectedObjects& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedObjects(DetectedObjects&& from) noexcept
    : DetectedObjects() {
    *this = ::std::move(from);
  }

  inline DetectedObjects& operator=(DetectedObjects&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedObjects& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedObjects* internal_default_instance() {
    return reinterpret_cast<const DetectedObjects*>(
               &_DetectedObjects_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DetectedObjects* other);
  friend void swap(DetectedObjects& a, DetectedObjects& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedObjects* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedObjects* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedObjects& from);
  void MergeFrom(const DetectedObjects& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedObjects* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DetectedObjects_DetectedObject DetectedObject;

  // accessors -------------------------------------------------------

  // repeated .darknetServer.DetectedObjects.DetectedObject objects = 2;
  int objects_size() const;
  void clear_objects();
  static const int kObjectsFieldNumber = 2;
  const ::darknetServer::DetectedObjects_DetectedObject& objects(int index) const;
  ::darknetServer::DetectedObjects_DetectedObject* mutable_objects(int index);
  ::darknetServer::DetectedObjects_DetectedObject* add_objects();
  ::google::protobuf::RepeatedPtrField< ::darknetServer::DetectedObjects_DetectedObject >*
      mutable_objects();
  const ::google::protobuf::RepeatedPtrField< ::darknetServer::DetectedObjects_DetectedObject >&
      objects() const;

  // @@protoc_insertion_point(class_scope:darknetServer.DetectedObjects)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::darknetServer::DetectedObjects_DetectedObject > objects_;
  mutable int _cached_size_;
  friend struct ::protobuf_darknetserver_2eproto::TableStruct;
  friend void ::protobuf_darknetserver_2eproto::InitDefaultsDetectedObjectsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// KeyFrame

// int32 width = 1;
inline void KeyFrame::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 KeyFrame::width() const {
  // @@protoc_insertion_point(field_get:darknetServer.KeyFrame.width)
  return width_;
}
inline void KeyFrame::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:darknetServer.KeyFrame.width)
}

// int32 height = 2;
inline void KeyFrame::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 KeyFrame::height() const {
  // @@protoc_insertion_point(field_get:darknetServer.KeyFrame.height)
  return height_;
}
inline void KeyFrame::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:darknetServer.KeyFrame.height)
}

// int32 numChannels = 3;
inline void KeyFrame::clear_numchannels() {
  numchannels_ = 0;
}
inline ::google::protobuf::int32 KeyFrame::numchannels() const {
  // @@protoc_insertion_point(field_get:darknetServer.KeyFrame.numChannels)
  return numchannels_;
}
inline void KeyFrame::set_numchannels(::google::protobuf::int32 value) {
  
  numchannels_ = value;
  // @@protoc_insertion_point(field_set:darknetServer.KeyFrame.numChannels)
}

// int32 widthStep = 4;
inline void KeyFrame::clear_widthstep() {
  widthstep_ = 0;
}
inline ::google::protobuf::int32 KeyFrame::widthstep() const {
  // @@protoc_insertion_point(field_get:darknetServer.KeyFrame.widthStep)
  return widthstep_;
}
inline void KeyFrame::set_widthstep(::google::protobuf::int32 value) {
  
  widthstep_ = value;
  // @@protoc_insertion_point(field_set:darknetServer.KeyFrame.widthStep)
}

// repeated float data = 5;
inline int KeyFrame::data_size() const {
  return data_.size();
}
inline void KeyFrame::clear_data() {
  data_.Clear();
}
inline float KeyFrame::data(int index) const {
  // @@protoc_insertion_point(field_get:darknetServer.KeyFrame.data)
  return data_.Get(index);
}
inline void KeyFrame::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:darknetServer.KeyFrame.data)
}
inline void KeyFrame::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:darknetServer.KeyFrame.data)
}
inline const ::google::protobuf::RepeatedField< float >&
KeyFrame::data() const {
  // @@protoc_insertion_point(field_list:darknetServer.KeyFrame.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< float >*
KeyFrame::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:darknetServer.KeyFrame.data)
  return &data_;
}

// -------------------------------------------------------------------

// DetectedObjects_DetectedObject_box

// float x = 1;
inline void DetectedObjects_DetectedObject_box::clear_x() {
  x_ = 0;
}
inline float DetectedObjects_DetectedObject_box::x() const {
  // @@protoc_insertion_point(field_get:darknetServer.DetectedObjects.DetectedObject.box.x)
  return x_;
}
inline void DetectedObjects_DetectedObject_box::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:darknetServer.DetectedObjects.DetectedObject.box.x)
}

// float y = 2;
inline void DetectedObjects_DetectedObject_box::clear_y() {
  y_ = 0;
}
inline float DetectedObjects_DetectedObject_box::y() const {
  // @@protoc_insertion_point(field_get:darknetServer.DetectedObjects.DetectedObject.box.y)
  return y_;
}
inline void DetectedObjects_DetectedObject_box::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:darknetServer.DetectedObjects.DetectedObject.box.y)
}

// float w = 3;
inline void DetectedObjects_DetectedObject_box::clear_w() {
  w_ = 0;
}
inline float DetectedObjects_DetectedObject_box::w() const {
  // @@protoc_insertion_point(field_get:darknetServer.DetectedObjects.DetectedObject.box.w)
  return w_;
}
inline void DetectedObjects_DetectedObject_box::set_w(float value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:darknetServer.DetectedObjects.DetectedObject.box.w)
}

// float h = 4;
inline void DetectedObjects_DetectedObject_box::clear_h() {
  h_ = 0;
}
inline float DetectedObjects_DetectedObject_box::h() const {
  // @@protoc_insertion_point(field_get:darknetServer.DetectedObjects.DetectedObject.box.h)
  return h_;
}
inline void DetectedObjects_DetectedObject_box::set_h(float value) {
  
  h_ = value;
  // @@protoc_insertion_point(field_set:darknetServer.DetectedObjects.DetectedObject.box.h)
}

// -------------------------------------------------------------------

// DetectedObjects_DetectedObject

// .darknetServer.DetectedObjects.DetectedObject.box bbox = 1;
inline bool DetectedObjects_DetectedObject::has_bbox() const {
  return this != internal_default_instance() && bbox_ != NULL;
}
inline void DetectedObjects_DetectedObject::clear_bbox() {
  if (GetArenaNoVirtual() == NULL && bbox_ != NULL) {
    delete bbox_;
  }
  bbox_ = NULL;
}
inline const ::darknetServer::DetectedObjects_DetectedObject_box& DetectedObjects_DetectedObject::bbox() const {
  const ::darknetServer::DetectedObjects_DetectedObject_box* p = bbox_;
  // @@protoc_insertion_point(field_get:darknetServer.DetectedObjects.DetectedObject.bbox)
  return p != NULL ? *p : *reinterpret_cast<const ::darknetServer::DetectedObjects_DetectedObject_box*>(
      &::darknetServer::_DetectedObjects_DetectedObject_box_default_instance_);
}
inline ::darknetServer::DetectedObjects_DetectedObject_box* DetectedObjects_DetectedObject::release_bbox() {
  // @@protoc_insertion_point(field_release:darknetServer.DetectedObjects.DetectedObject.bbox)
  
  ::darknetServer::DetectedObjects_DetectedObject_box* temp = bbox_;
  bbox_ = NULL;
  return temp;
}
inline ::darknetServer::DetectedObjects_DetectedObject_box* DetectedObjects_DetectedObject::mutable_bbox() {
  
  if (bbox_ == NULL) {
    bbox_ = new ::darknetServer::DetectedObjects_DetectedObject_box;
  }
  // @@protoc_insertion_point(field_mutable:darknetServer.DetectedObjects.DetectedObject.bbox)
  return bbox_;
}
inline void DetectedObjects_DetectedObject::set_allocated_bbox(::darknetServer::DetectedObjects_DetectedObject_box* bbox) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bbox_;
  }
  if (bbox) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bbox = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bbox, submessage_arena);
    }
    
  } else {
    
  }
  bbox_ = bbox;
  // @@protoc_insertion_point(field_set_allocated:darknetServer.DetectedObjects.DetectedObject.bbox)
}

// int32 classes = 2;
inline void DetectedObjects_DetectedObject::clear_classes() {
  classes_ = 0;
}
inline ::google::protobuf::int32 DetectedObjects_DetectedObject::classes() const {
  // @@protoc_insertion_point(field_get:darknetServer.DetectedObjects.DetectedObject.classes)
  return classes_;
}
inline void DetectedObjects_DetectedObject::set_classes(::google::protobuf::int32 value) {
  
  classes_ = value;
  // @@protoc_insertion_point(field_set:darknetServer.DetectedObjects.DetectedObject.classes)
}

// repeated float prob = 3;
inline int DetectedObjects_DetectedObject::prob_size() const {
  return prob_.size();
}
inline void DetectedObjects_DetectedObject::clear_prob() {
  prob_.Clear();
}
inline float DetectedObjects_DetectedObject::prob(int index) const {
  // @@protoc_insertion_point(field_get:darknetServer.DetectedObjects.DetectedObject.prob)
  return prob_.Get(index);
}
inline void DetectedObjects_DetectedObject::set_prob(int index, float value) {
  prob_.Set(index, value);
  // @@protoc_insertion_point(field_set:darknetServer.DetectedObjects.DetectedObject.prob)
}
inline void DetectedObjects_DetectedObject::add_prob(float value) {
  prob_.Add(value);
  // @@protoc_insertion_point(field_add:darknetServer.DetectedObjects.DetectedObject.prob)
}
inline const ::google::protobuf::RepeatedField< float >&
DetectedObjects_DetectedObject::prob() const {
  // @@protoc_insertion_point(field_list:darknetServer.DetectedObjects.DetectedObject.prob)
  return prob_;
}
inline ::google::protobuf::RepeatedField< float >*
DetectedObjects_DetectedObject::mutable_prob() {
  // @@protoc_insertion_point(field_mutable_list:darknetServer.DetectedObjects.DetectedObject.prob)
  return &prob_;
}

// repeated float mask = 4;
inline int DetectedObjects_DetectedObject::mask_size() const {
  return mask_.size();
}
inline void DetectedObjects_DetectedObject::clear_mask() {
  mask_.Clear();
}
inline float DetectedObjects_DetectedObject::mask(int index) const {
  // @@protoc_insertion_point(field_get:darknetServer.DetectedObjects.DetectedObject.mask)
  return mask_.Get(index);
}
inline void DetectedObjects_DetectedObject::set_mask(int index, float value) {
  mask_.Set(index, value);
  // @@protoc_insertion_point(field_set:darknetServer.DetectedObjects.DetectedObject.mask)
}
inline void DetectedObjects_DetectedObject::add_mask(float value) {
  mask_.Add(value);
  // @@protoc_insertion_point(field_add:darknetServer.DetectedObjects.DetectedObject.mask)
}
inline const ::google::protobuf::RepeatedField< float >&
DetectedObjects_DetectedObject::mask() const {
  // @@protoc_insertion_point(field_list:darknetServer.DetectedObjects.DetectedObject.mask)
  return mask_;
}
inline ::google::protobuf::RepeatedField< float >*
DetectedObjects_DetectedObject::mutable_mask() {
  // @@protoc_insertion_point(field_mutable_list:darknetServer.DetectedObjects.DetectedObject.mask)
  return &mask_;
}

// float objectness = 5;
inline void DetectedObjects_DetectedObject::clear_objectness() {
  objectness_ = 0;
}
inline float DetectedObjects_DetectedObject::objectness() const {
  // @@protoc_insertion_point(field_get:darknetServer.DetectedObjects.DetectedObject.objectness)
  return objectness_;
}
inline void DetectedObjects_DetectedObject::set_objectness(float value) {
  
  objectness_ = value;
  // @@protoc_insertion_point(field_set:darknetServer.DetectedObjects.DetectedObject.objectness)
}

// int32 sort_class = 6;
inline void DetectedObjects_DetectedObject::clear_sort_class() {
  sort_class_ = 0;
}
inline ::google::protobuf::int32 DetectedObjects_DetectedObject::sort_class() const {
  // @@protoc_insertion_point(field_get:darknetServer.DetectedObjects.DetectedObject.sort_class)
  return sort_class_;
}
inline void DetectedObjects_DetectedObject::set_sort_class(::google::protobuf::int32 value) {
  
  sort_class_ = value;
  // @@protoc_insertion_point(field_set:darknetServer.DetectedObjects.DetectedObject.sort_class)
}

// -------------------------------------------------------------------

// DetectedObjects

// repeated .darknetServer.DetectedObjects.DetectedObject objects = 2;
inline int DetectedObjects::objects_size() const {
  return objects_.size();
}
inline void DetectedObjects::clear_objects() {
  objects_.Clear();
}
inline const ::darknetServer::DetectedObjects_DetectedObject& DetectedObjects::objects(int index) const {
  // @@protoc_insertion_point(field_get:darknetServer.DetectedObjects.objects)
  return objects_.Get(index);
}
inline ::darknetServer::DetectedObjects_DetectedObject* DetectedObjects::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:darknetServer.DetectedObjects.objects)
  return objects_.Mutable(index);
}
inline ::darknetServer::DetectedObjects_DetectedObject* DetectedObjects::add_objects() {
  // @@protoc_insertion_point(field_add:darknetServer.DetectedObjects.objects)
  return objects_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::darknetServer::DetectedObjects_DetectedObject >*
DetectedObjects::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:darknetServer.DetectedObjects.objects)
  return &objects_;
}
inline const ::google::protobuf::RepeatedPtrField< ::darknetServer::DetectedObjects_DetectedObject >&
DetectedObjects::objects() const {
  // @@protoc_insertion_point(field_list:darknetServer.DetectedObjects.objects)
  return objects_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace darknetServer

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_darknetserver_2eproto__INCLUDED
